{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/augustotoloza/Documents/School/ruletap-mobile/ruleweb-rn/App.js\";\nimport React, { useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Homescreen from \"./Homescreen\";\nimport Redeemed from \"./Redeemed\";\nimport ErrorScreen from \"./ErrorScreen\";\nimport { Comfortaa_700Bold, Comfortaa_400Regular, useFonts } from \"@expo-google-fonts/comfortaa\";\nimport { OpenSans_400Regular } from \"@expo-google-fonts/open-sans\";\nimport Dashboard from \"./Dashboard\";\nimport RulewebContext from \"./RulewebContext\";\nvar Stack = createStackNavigator();\n\nfunction App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isAuthorized = _useState6[0],\n      setIsAuthorized = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      shopData = _useState8[0],\n      setShopData = _useState8[1];\n\n  var value = {\n    email: email,\n    setEmail: setEmail,\n    password: password,\n    setPassword: setPassword,\n    isAuthorized: isAuthorized,\n    setIsAuthorized: setIsAuthorized,\n    shopData: shopData,\n    setShopData: setShopData\n  };\n\n  var _useFonts = useFonts({\n    Comfortaa_400Regular: Comfortaa_400Regular,\n    Comfortaa_700Bold: Comfortaa_700Bold,\n    OpenSans_400Regular: OpenSans_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return React.createElement(RulewebContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, isAuthorized ? React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Dashboard\",\n    component: Dashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Premio Canjeado\",\n    component: Redeemed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Err\",\n    component: ErrorScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  })) : React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: Homescreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/augustotoloza/Documents/School/ruletap-mobile/ruleweb-rn/App.js"],"names":["React","useState","NavigationContainer","createStackNavigator","Homescreen","Redeemed","ErrorScreen","Comfortaa_700Bold","Comfortaa_400Regular","useFonts","OpenSans_400Regular","Dashboard","RulewebContext","Stack","App","email","setEmail","password","setPassword","isAuthorized","setIsAuthorized","shopData","setShopData","value","fontsLoaded","headerShown"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,UAAP;AACA,OAAOC,QAAP;AACA,OAAOC,WAAP;AACA,SACEC,iBADF,EAEEC,oBAFF,EAGEC,QAHF,QAIO,8BAJP;AAKA,SAASC,mBAAT,QAAoC,8BAApC;AACA,OAAOC,SAAP;AACA,OAAOC,cAAP;AACA,IAAMC,KAAK,GAAGV,oBAAoB,EAAlC;;AAEA,SAASW,GAAT,GAAe;AACb,kBAA0Bb,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOc,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCf,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOgB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwCjB,QAAQ,CAAC,KAAD,CAAhD;AAAA;AAAA,MAAOkB,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAAgCnB,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOoB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,KAAK,GAAG;AACZR,IAAAA,KAAK,EAALA,KADY;AAEZC,IAAAA,QAAQ,EAARA,QAFY;AAGZC,IAAAA,QAAQ,EAARA,QAHY;AAIZC,IAAAA,WAAW,EAAXA,WAJY;AAKZC,IAAAA,YAAY,EAAZA,YALY;AAMZC,IAAAA,eAAe,EAAfA,eANY;AAOZC,IAAAA,QAAQ,EAARA,QAPY;AAQZC,IAAAA,WAAW,EAAXA;AARY,GAAd;;AAWA,kBAAoBb,QAAQ,CAAC;AAC3BD,IAAAA,oBAAoB,EAApBA,oBAD2B;AAE3BD,IAAAA,iBAAiB,EAAjBA,iBAF2B;AAG3BG,IAAAA,mBAAmB,EAAnBA;AAH2B,GAAD,CAA5B;AAAA;AAAA,MAAKc,WAAL;;AAMA,MAAI,CAACA,WAAL,EAAkB;AAChB,WAAO,IAAP;AACD;;AACD,SACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAED,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AACE,IAAA,aAAa,EAAE;AACbE,MAAAA,WAAW,EAAE;AADA,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGN,YAAY,GACX,0CACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,WAAnB;AAA+B,IAAA,SAAS,EAAER,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,iBAAnB;AAAqC,IAAA,SAAS,EAAEN,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,KAAnB;AAAyB,IAAA,SAAS,EAAEC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADW,GAOX,0CACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEF,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZJ,CADF,CADF,CADF;AAuBD;;AAED,eAAeU,GAAf","sourcesContent":["// In App.js in a new project\nimport React, { useState } from \"react\";\n//import { View, Text } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Homescreen from \"./Homescreen\";\nimport Redeemed from \"./Redeemed\";\nimport ErrorScreen from \"./ErrorScreen\";\nimport {\n  Comfortaa_700Bold,\n  Comfortaa_400Regular,\n  useFonts,\n} from \"@expo-google-fonts/comfortaa\";\nimport { OpenSans_400Regular } from \"@expo-google-fonts/open-sans\";\nimport Dashboard from \"./Dashboard\";\nimport RulewebContext from \"./RulewebContext\";\nconst Stack = createStackNavigator();\n\nfunction App() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isAuthorized, setIsAuthorized] = useState(false);\n  const [shopData, setShopData] = useState(\"\");\n  const value = {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    isAuthorized,\n    setIsAuthorized,\n    shopData,\n    setShopData,\n  };\n\n  let [fontsLoaded] = useFonts({\n    Comfortaa_400Regular,\n    Comfortaa_700Bold,\n    OpenSans_400Regular,\n  });\n\n  if (!fontsLoaded) {\n    return null;\n  }\n  return (\n    <RulewebContext.Provider value={value}>\n      <NavigationContainer>\n        <Stack.Navigator\n          screenOptions={{\n            headerShown: false,\n          }}\n        >\n          {isAuthorized ? (\n            <>\n              <Stack.Screen name=\"Dashboard\" component={Dashboard} />\n              <Stack.Screen name=\"Premio Canjeado\" component={Redeemed} />\n              <Stack.Screen name=\"Err\" component={ErrorScreen} />\n            </>\n          ) : (\n            <>\n              <Stack.Screen name=\"Home\" component={Homescreen} />\n            </>\n          )}\n        </Stack.Navigator>\n      </NavigationContainer>\n    </RulewebContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}